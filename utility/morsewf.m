% the morse oscillator states and energies for a given set of morse
% potential parameters

function [e wf] = morsewf(mu,par,r,emax)

% emax:: return all states lower in energy than emax

% morse potential V(r)-De = De*(exp(-a(r-re))-1)^2

% x = 2*w*exp(-a(r-re)) U0 = 2mu/de w = sqrt(U0)/a

% from rabitz and askar ( chemical physics 33 1978 267-286)
%
% E_n = [2*sqrt(U0)a(n+1/2)-a^2(n+.5)^2-U0]/(2mu)
%%
% wf_n =sqrt(N_n)*exp(-x/2)*x^(-w+n+.5)*d^n Z /dx^n
%
% N_n = 1/(gamma(2(w-1))*n! )
%
% Z = exp(-x)x^(2w-n-1)

%% parameters/variables

% number of points
lnr = length(r);

% extract morse parameters
a = par(1); re = par(2); de = par(3);

% change of variables
x = a*r;
xe = a*re;


%% eigen energies
U0 = (2*mu)*de;
w = sqrt(U0)/a;


ne = 0:10;


e = (2*sqrt(U0)*a*(ne+.5)-a^2*(ne+.5).^2-U0)/(2*mu)+de;

e = e(e<emax);

n = length(e)-1;


%% eigen vectors

x = 2*w*exp(-a*(x-xe));

wf = zeros(lnr,n+1);
for j=0:n
    wf(:,j+1) =  dnzdxn(x,w,j).*exp(x/2).*x.^(-w+(j+.5))./sqrt((gamma(2*(w-j)).*factorial(j)));
    wf(:,j+1) = wf(:,j+1)/sqrt(sum(wf(:,j+1).^2));
end


end

function dxn = dnzdxn(x,w,n)

switch n
    
    case 0
        
        dxn = x.^(2*w-n-1).*exp(-x);
        
    case 1
        
        dxn =-x.^(2.*w-n-1).*exp(-x)-x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1);
        
    case 2
        
        dxn = x.^(2.*w-n-1).*exp(-x)+2.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)+x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2);
        
    case 3
        
        dxn =-x.^(2.*w-n-1).*exp(-x)-3.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)-3.*x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2)-x.^(2.*w-n-4).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3);
        
    case 4
        
        dxn = -x.^(2.*w-n-1).*exp(-x)+4.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)+6.*x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2)+4.*x.^(2.*w-n-4).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3)+x.^(2.*w-n-5).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4);
        
    case 5
        
        dxn =-x.^(2.*w-n-1).*exp(-x)-5.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)-10.*x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2)-10.*x.^(2.*w-n-4).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3)-5.*x.^(2.*w-n-5).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4)-x.^(2.*w-n-6).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5);
        
    case 6
        
        dxn = x.^(2.*w-n-1).*exp(-x)+6.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)+15.*x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2)+20.*x.^(2.*w-n-4).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3)+15.*x.^(2.*w-n-5).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4)+6.*x.^(2.*w-n-6).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5)+x.^(2.*w-n-7).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6);
        
    case 7
        
        dxn =-x.^(2.*w-n-1).*exp(-x)-7.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)-21.*x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2)-35.*x.^(2.*w-n-4).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3)-35.*x.^(2.*w-n-5).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4)-21.*x.^(2.*w-n-6).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5)-7.*x.^(2.*w-n-7).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6)-x.^(2.*w-n-8).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7);
        
    case 8
        
        dxn = x.^(2.*w-n-1).*exp(-x)+8.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)+28.*x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2)+56.*x.^(2.*w-n-4).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3)+70.*x.^(2.*w-n-5).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4)+56.*x.^(2.*w-n-6).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5)+28.*x.^(2.*w-n-7).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6)+8.*x.^(2.*w-n-8).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7)+x.^(2.*w-n-9).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7).*(n-2.*w+8);
        
    case 9
        
        dxn =-x.^(2.*w-n-1).*exp(-x)-9.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)-36.*x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2)-84.*x.^(2.*w-n-4).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3)-126.*x.^(2.*w-n-5).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4)-126.*x.^(2.*w-n-6).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5)-84.*x.^(2.*w-n-7).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6)-36.*x.^(2.*w-n-8).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7)-9.*x.^(2.*w-n-9).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7).*(n-2.*w+8)-x.^(2.*w-n-10).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7).*(n-2.*w+8).*(n-2.*w+9);
        
    case 10
        
        dxn = x.^(2.*w-n-1).*exp(-x)+10.*x.^(2.*w-n-2).*exp(-x).*(n-2.*w+1)+45.*x.^(2.*w-n-3).*exp(-x).*(n-2.*w+1).*(n-2.*w+2)+120.*x.^(2.*w-n-4).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3)+210.*x.^(2.*w-n-5).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4)+252.*x.^(2.*w-n-6).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5)+210.*x.^(2.*w-n-7).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6)+120.*x.^(2.*w-n-8).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7)+45.*x.^(2.*w-n-9).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7).*(n-2.*w+8)+10.*x.^(2.*w-n-10).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7).*(n-2.*w+8).*(n-2.*w+9)+x.^(2.*w-n-11).*exp(-x).*(n-2.*w+1).*(n-2.*w+2).*(n-2.*w+3).*(n-2.*w+4).*(n-2.*w+5).*(n-2.*w+6).*(n-2.*w+7).*(n-2.*w+8).*(n-2.*w+9).*(n-2.*w+10);1
        
end
end